import java.util.*;
public class MyClass {
    public static int merge(int[] a,int low,int mid,int high)
    {
        int c=0;
        int j=mid+1;
        for(int i=low;i<=mid;i++)
        {
            while(j<=high && a[i]>(2*(long)a[j])) 
           { j++;}
            c+=(j-(mid+1));
        }
        ArrayList<Integer> temp=new ArrayList<>();
        int left=low,right=(mid+1);
        while(left<=mid && right<=high)
        {
            if(a[left]<=a[right])
            temp.add(a[left++]);
            else
            temp.add(a[right++]);
        }
        while(left<=mid)
        {
            temp.add(a[left++]);
        }
        while(right<=high)
        temp.add(a[right++]);
        for(int i=low;i<=high;i++)
        a[i]=temp.get(i-low);
        return c;
    }
    public static int mergeSort(int[] a,int low,int high)
    { 
        if(low>=high)return 0;
        int mid=(high+low)/2;
        int c=mergeSort(a,low,mid);
        c+=mergeSort(a,mid+1,high);
        c+=merge(a,low,mid,high);
        return c;
    }
    public static int reversePairs(int[] a)
    {
        return mergeSort(a,0,a.length-1);
    }
  
    public static void main(String[] args) 
    { 
        int arr[]={1,3,2,3,1};
      int a=reversePairs(arr);
      System.out.println(a);
    } 
}
